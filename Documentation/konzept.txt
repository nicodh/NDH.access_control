Action method access control

class access control
	read
	write

conditional access rule:
	read:
		conditionProperty:
		conditionValue:
			denyValue:
			grantValue:

	read:
		conditionProperty:
		conditionValue:
			denyValue:
			grantValue:

property access rule
	read,
	write,
	readOwn,
	writeOwn,


accessDecisionManager

Role => Rules => RuleProcessor

RuleProcessor

Backend->supports(ObjectAccessRule)
Backend->supports(ObjectPropertyAccessRule)
Backend->supports(ConditionalObjectAccessRule)
Backend->supports(ConditionalObjectPropertyAccessRule)

Role		:	object	:read/write:	ACCESS

context: FE
	anonymous:
		fe_users:
			read:GRANT
			write:DENY

	intranet:
		fe_users:
			read:
				object: GRANT_ON_CONDITIONS
					conditions:
						conditionProperty: deleted
							conditionalValue:
								deny: 1
								grant: 0
						conditionProperty: hidden
							conditionalValue:
								deny: 1
								grant: 0

                allowed_exclude_fields:
                   	properties:	privatePhone, privateMail
						conditionProperty: vip
							conditionValue:
								deny: 1
								grant: 0


			write:
				allowed_exclude_fields:
					properties: password, birthdate, email, phone
						conditionProperty: fcruser_id
							conditionValue:
								grant: self->uid

						conditionProperty: pid
							conditionValue:
								grant: 244


enableFields by Role (Rule?)
